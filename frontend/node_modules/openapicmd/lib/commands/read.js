"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Read = void 0;
const core_1 = require("@oclif/core");
const definition_1 = require("../common/definition");
const commonFlags = require("../common/flags");
class Read extends core_1.Command {
    async run() {
        const { args, flags } = await this.parse(Read);
        const { dereference, validate, bundle, header, root } = flags;
        const definition = (0, definition_1.resolveDefinition)(args.definition);
        if (!definition) {
            this.error('Please load a definition file', { exit: 1 });
        }
        let document;
        try {
            document = await (0, definition_1.parseDefinition)({
                definition,
                dereference,
                bundle,
                validate,
                inject: flags.inject,
                strip: flags.strip,
                excludeExt: flags === null || flags === void 0 ? void 0 : flags['exclude-ext'],
                removeUnreferenced: flags === null || flags === void 0 ? void 0 : flags['remove-unreferenced'],
                servers: flags.server,
                header,
                root,
            });
        }
        catch (err) {
            this.error(err, { exit: 1 });
        }
        const format = flags.format === 'json' || flags.json ? definition_1.OutputFormat.JSON : definition_1.OutputFormat.YAML;
        if (format === definition_1.OutputFormat.JSON) {
            this.logJson(document);
        }
        else {
            this.log((0, definition_1.stringifyDocument)({ document, format }));
        }
    }
}
exports.Read = Read;
Read.description = 'Read and manipulate definition files';
Read.examples = [
    '$ openapi read https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v3.0/petstore.yaml',
    `$ openapi read ./openapi.yml -f json > openapi.json`,
];
Read.flags = {
    ...commonFlags.help(),
    ...commonFlags.parseOpts(),
    ...commonFlags.outputFormat(),
};
Read.args = {
    definition: core_1.Args.string({
        description: 'input definition file'
    })
};
