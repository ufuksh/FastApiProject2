"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const test_1 = require("@oclif/test");
const test_utils_1 = require("../__tests__/test-utils");
require("chai");
describe('call', () => {
    let endpointCalled;
    const setEndpointCalled = (val) => (endpointCalled = Boolean(val));
    // silence console.warn during tests
    const consoleWarn = console.warn;
    beforeEach(() => {
        console.warn = () => null;
    });
    afterEach(() => {
        console.warn = consoleWarn;
    });
    test_1.test
        .do(() => setEndpointCalled(false))
        .nock('https://myapi.com', (api) => api
        .get('/openapi.json')
        .reply(200, test_utils_1.testDefinition)
        .get('/pets')
        .reply(200, () => {
        setEndpointCalled(true);
        return {};
    }))
        .stdout()
        .command(['call', 'https://myapi.com/openapi.json', '-o', 'getPets', '--apikey', 'secret'])
        .it('calls GET /pets with -o getPets', (_ctx) => {
        (0, test_1.expect)(endpointCalled).to.be.true;
    });
    test_1.test
        .do(() => setEndpointCalled(false))
        .nock('https://myapi.com', (api) => api
        .get('/openapi.json')
        .reply(200, test_utils_1.testDefinition)
        .get('/pets/1')
        .reply(200, () => {
        setEndpointCalled(true);
        return {};
    }))
        .stdout()
        .command(['call', 'https://myapi.com/openapi.json', '-o', 'getPetById', '-p', 'id=1', '--apikey', 'secret'])
        .it('calls GET /pets/1 with -o getPetById -p id=1', (_ctx) => {
        (0, test_1.expect)(endpointCalled).to.be.true;
    });
});
