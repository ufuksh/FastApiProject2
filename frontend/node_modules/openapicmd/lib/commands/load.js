"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Load = void 0;
const core_1 = require("@oclif/core");
const commonFlags = require("../common/flags");
const path = require("path");
const fs = require("fs");
const YAML = require("js-yaml");
const definition_1 = require("../common/definition");
const config_1 = require("../common/config");
class Load extends core_1.Command {
    async run() {
        const { args, flags } = await this.parse(Load);
        const definition = args.definition;
        // check that definition can be parsed
        try {
            await (0, definition_1.parseDefinition)({ definition, validate: flags.validate });
        }
        catch (err) {
            this.error(err, { exit: 1 });
        }
        const configFile = (0, config_1.resolveConfigFile)();
        // write to config file
        const oldConfig = configFile ? YAML.load(fs.readFileSync(configFile).toString()) : {};
        const newConfig = {
            ...oldConfig,
            definition,
        };
        // default to current directory
        const writeTo = path.resolve(configFile || `./${config_1.CONFIG_FILENAME}`);
        // write as YAML
        fs.writeFileSync(writeTo, YAML.dump(newConfig));
        this.log(`Wrote to ${writeTo}`);
        this.log(`Loaded succesfully!`);
    }
}
exports.Load = Load;
Load.description = 'Set the default definition file for a workspace (writes to .openapiconfig)';
Load.examples = [
    `$ openapi load ./openapi.yml`,
    '$ openapi load https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v3.0/petstore.yaml',
];
Load.flags = {
    ...commonFlags.help(),
    ...commonFlags.validate(),
    ...commonFlags.servers(),
};
Load.args = {
    definition: core_1.Args.string({
        description: 'input definition file',
        required: true
    })
};
