"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwaggerEditor = void 0;
const core_1 = require("@oclif/core");
const fs = require("fs");
const path = require("path");
const Router = require("koa-router");
const serve = require("koa-static");
const axios_1 = require("axios");
const utils_1 = require("../common/utils");
const commonFlags = require("../common/flags");
const koa_1 = require("../common/koa");
const definition_1 = require("../common/definition");
function getAbsoluteFSPath() {
    return path.dirname(require.resolve('swagger-editor-dist'));
}
class SwaggerEditor extends core_1.Command {
    async run() {
        const { args, flags } = await this.parse(SwaggerEditor);
        const { port, logger, header } = flags;
        const definition = (0, definition_1.resolveDefinition)(args.definition);
        const app = (0, koa_1.createServer)({ logger });
        const router = new Router();
        let document = null;
        if (definition) {
            if (definition.match('://')) {
                const { data } = await axios_1.default.get(definition, {
                    headers: (0, utils_1.parseHeaderFlag)(header),
                    responseType: 'text',
                    // need to set this, unfortunately
                    // https://github.com/axios/axios/issues/907
                    transformResponse: [(data) => data.toString()],
                });
                try {
                    // attempt to prettify JSON
                    document = JSON.stringify(JSON.parse(data), null, 2);
                }
                catch (err) {
                    document = data;
                }
            }
            else {
                document = fs.readFileSync(definition).toString();
            }
        }
        const swaggerEditorRoot = getAbsoluteFSPath();
        if (document) {
            const indexHTML = fs.readFileSync(path.join(swaggerEditorRoot, 'index.html')).toString('utf8');
            router.get('/', (ctx) => {
                ctx.body = indexHTML.replace('window.editor = editor', `editor.specActions.updateSpec(\`${(0, utils_1.escapeStringTemplateTicks)(document)}\`)\n\nwindow.editor = editor`);
            });
        }
        app.use(router.routes());
        app.use(serve(swaggerEditorRoot));
        const { port: portRunning } = await (0, koa_1.startServer)({ app, port });
        this.log(`Swagger Editor running at http://localhost:${portRunning}`);
        this.log();
    }
}
exports.SwaggerEditor = SwaggerEditor;
SwaggerEditor.description = 'Start a Swagger Editor instance';
SwaggerEditor.examples = ['$ openapi swagger-editor', '$ openapi swagger-editor ./openapi.yml'];
SwaggerEditor.flags = {
    ...commonFlags.help(),
    ...commonFlags.serverOpts(),
    ...commonFlags.header(),
};
SwaggerEditor.args = {
    definition: core_1.Args.string({
        description: 'input definition file'
    })
};
