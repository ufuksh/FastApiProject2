"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSwaggerUIInitializerScript = exports.getSwaggerUIIndexHTML = exports.serveSwaggerUI = exports.DocExpansion = exports.swaggerUIRoot = void 0;
const URL = require("url");
const fs = require("fs");
const path = require("path");
const Koa = require("koa");
const Router = require("koa-router");
const serve = require("koa-static");
const SwaggerUIDist = require("swagger-ui-dist");
const common_tags_1 = require("common-tags");
exports.swaggerUIRoot = SwaggerUIDist.getAbsoluteFSPath();
var DocExpansion;
(function (DocExpansion) {
    DocExpansion["Full"] = "full";
    DocExpansion["List"] = "list";
    DocExpansion["None"] = "none";
})(DocExpansion = exports.DocExpansion || (exports.DocExpansion = {}));
function serveSwaggerUI(opts = {}) {
    const app = new Koa();
    const router = new Router();
    const indexHTML = getSwaggerUIIndexHTML();
    const initializerScript = getSwaggerUIInitializerScript(opts);
    // serve index.html
    router.get('/', (ctx) => {
        const url = ctx.originalUrl || ctx.url;
        const { pathname, query, hash } = URL.parse(url);
        // append trailing slash so relative paths work
        if (!pathname.endsWith('/')) {
            ctx.status = 302;
            return ctx.redirect(URL.format({
                pathname: `${pathname}/`,
                query,
                hash,
            }));
        }
        ctx.body = indexHTML;
        ctx.status = 200;
    });
    // serve swagger-initializer.js
    router.get('/swagger-initializer.js', (ctx) => {
        ctx.body = initializerScript;
        ctx.status = 200;
    });
    app.use(router.routes());
    app.use(serve(exports.swaggerUIRoot));
    return app;
}
exports.serveSwaggerUI = serveSwaggerUI;
function getSwaggerUIIndexHTML() {
    return fs
        .readFileSync(path.join(exports.swaggerUIRoot, 'index.html'))
        .toString('utf8');
}
exports.getSwaggerUIIndexHTML = getSwaggerUIIndexHTML;
function getSwaggerUIInitializerScript(opts = {}) {
    const config = {
        layout: 'StandaloneLayout',
        deepLinking: true,
        displayOperationId: true,
        displayRequestDuration: true,
        showExtensions: true,
        showCommonExtensions: true,
        withCredentials: true,
        filter: true,
        ...opts,
    };
    return (0, common_tags_1.html) `
    const config = JSON.parse(\`${JSON.stringify(config)}\`);

    window.onload = function() {
      //<editor-fold desc="Changeable Configuration Block">

      // the following lines will be replaced by docker/configurator, when it runs in a docker-container
      window.ui = SwaggerUIBundle({
        url: "https://petstore.swagger.io/v2/swagger.json",
        dom_id: '#swagger-ui',
        deepLinking: true,
        presets: [
          SwaggerUIBundle.presets.apis,
          SwaggerUIStandalonePreset
        ],
        plugins: [
          SwaggerUIBundle.plugins.DownloadUrl
        ],
        layout: "StandaloneLayout",
        ...config
      });

      //</editor-fold>
    };`;
}
exports.getSwaggerUIInitializerScript = getSwaggerUIInitializerScript;
