import { Definition } from '../types/types';
interface StripOptions {
    /**
     * Replace info with required fields only
     * @default true
     */
    replaceInfo?: boolean;
    /**
     * Remove tags from document
     * @default true
     */
    removeTags?: boolean;
    /**
     * Remove descriptions and summaries from document
     * @default true
     */
    removeDescriptions?: boolean;
    /**
     * Remove examples from document
     * @default true
     */
    removeExamples?: boolean;
    /**
     * Remove all openapi extensions (x-) from document
     * @default true
     */
    removeExtensions?: boolean;
    /**
     * Remove readOnly from document
     * @default true
     */
    removeReadOnly?: boolean;
    /**
     * Remove all schemas from document
     * @default false
     */
    removeSchemas?: boolean;
    /**
     * Remove all security schemes from document
     * @default false
     */
    removeSecuritySchemes?: boolean;
    /**
     * Remove servers from document
     * @default false
     */
    removeServers?: boolean;
    /**
     * Only include first server from servers array
     * @default false
     */
    firstServerOnly?: boolean;
    /**
     * Replace responses with minimal valid default response
     * @default false
     */
    replaceResponses?: boolean;
    /**
     * Remove responses entirely (warning: this will break validation)
     * @default false
     */
    removeResponses?: boolean;
}
export declare const PRESETS: {
    all: StripOptions;
    openapi_client_axios: {
        removeServers: boolean;
        firstServerOnly: boolean;
        /**
         * Replace info with required fields only
         * @default true
         */
        replaceInfo?: boolean;
        /**
         * Remove tags from document
         * @default true
         */
        removeTags?: boolean;
        /**
         * Remove descriptions and summaries from document
         * @default true
         */
        removeDescriptions?: boolean;
        /**
         * Remove examples from document
         * @default true
         */
        removeExamples?: boolean;
        /**
         * Remove all openapi extensions (x-) from document
         * @default true
         */
        removeExtensions?: boolean;
        /**
         * Remove readOnly from document
         * @default true
         */
        removeReadOnly?: boolean;
        /**
         * Remove all schemas from document
         * @default false
         */
        removeSchemas?: boolean;
        /**
         * Remove all security schemes from document
         * @default false
         */
        removeSecuritySchemes?: boolean;
        /**
         * Replace responses with minimal valid default response
         * @default false
         */
        replaceResponses?: boolean;
        /**
         * Remove responses entirely (warning: this will break validation)
         * @default false
         */
        removeResponses?: boolean;
    };
    openapi_backend: {
        removeExamples: boolean;
        removeServers: boolean;
        /**
         * Replace info with required fields only
         * @default true
         */
        replaceInfo?: boolean;
        /**
         * Remove tags from document
         * @default true
         */
        removeTags?: boolean;
        /**
         * Remove descriptions and summaries from document
         * @default true
         */
        removeDescriptions?: boolean;
        /**
         * Remove all openapi extensions (x-) from document
         * @default true
         */
        removeExtensions?: boolean;
        /**
         * Remove readOnly from document
         * @default true
         */
        removeReadOnly?: boolean;
        /**
         * Remove all schemas from document
         * @default false
         */
        removeSchemas?: boolean;
        /**
         * Remove all security schemes from document
         * @default false
         */
        removeSecuritySchemes?: boolean;
        /**
         * Only include first server from servers array
         * @default false
         */
        firstServerOnly?: boolean;
        /**
         * Replace responses with minimal valid default response
         * @default false
         */
        replaceResponses?: boolean;
        /**
         * Remove responses entirely (warning: this will break validation)
         * @default false
         */
        removeResponses?: boolean;
    };
    default: StripOptions;
};
export type StripPreset = keyof typeof PRESETS;
/**
 * Strips optional metadata from definition
 */
export declare const stripDefinition: (document: Definition, options?: StripOptions & {
    preset?: StripPreset;
}) => Definition;
export {};
