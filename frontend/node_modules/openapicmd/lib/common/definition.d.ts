import * as SwaggerParser from '@apidevtools/swagger-parser';
import { Command } from '@oclif/core';
interface ParseOpts {
    definition: string;
    dereference?: boolean;
    validate?: boolean;
    bundle?: boolean;
    servers?: string[];
    inject?: string[];
    strip?: string;
    excludeExt?: string;
    removeUnreferenced?: boolean;
    header?: string[];
    root?: string;
    induceServers?: boolean;
}
export declare function parseDefinition({ definition, dereference, validate, bundle, servers, inject, excludeExt, strip, header, root, induceServers, removeUnreferenced }: ParseOpts): Promise<SwaggerParser.Document>;
export declare enum OutputFormat {
    JSON = "json",
    YAML = "yaml"
}
interface OutputOpts {
    document: SwaggerParser.Document;
    format?: OutputFormat;
}
export declare function stringifyDocument({ document, format }: OutputOpts): string;
export declare function resolveDefinition(definitionArg: string): any;
export declare function printInfo(document: SwaggerParser.Document, ctx: Command): void;
export declare function getOperations(document: SwaggerParser.Document): any[];
export declare function printOperations(document: SwaggerParser.Document, ctx: Command): void;
export declare function printSchemas(document: SwaggerParser.Document, ctx: Command): void;
export {};
