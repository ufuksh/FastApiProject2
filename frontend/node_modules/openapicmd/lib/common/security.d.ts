import { OpenAPIV3, Operation } from 'openapi-client-axios';
import { Document } from '@apidevtools/swagger-parser';
export interface SecurityConfig {
    [securityScheme: string]: RequestSecurityConfig;
}
export interface RequestSecurityConfig {
    header?: {
        [header: string]: string;
    };
    cookie?: {
        [cookie: string]: string;
    };
    query?: {
        [key: string]: string;
    };
    auth?: {
        username: string;
        password: string;
    };
}
export declare const createSecurityRequestConfig: (params: {
    document: Document;
    operation?: Operation;
    security: string[];
    header: string[];
    token?: string;
    apikey?: string;
    username?: string;
    password?: string;
}) => Promise<RequestSecurityConfig>;
export declare const getActiveSecuritySchemes: (params: {
    document: Document;
    operation?: Operation;
    security: string[];
    header: string[];
    token?: string;
    apikey?: string;
    username?: string;
    password?: string;
    noInteractive?: boolean;
}) => Promise<any>;
export declare const createSecurityRequestConfigForScheme: (params: {
    schemeName: string;
    schemeDefinition: OpenAPIV3.SecuritySchemeObject;
    token?: string;
    apikey?: string;
    username?: string;
    password?: string;
    noInteractive?: boolean;
}) => Promise<RequestSecurityConfig>;
export declare const applyFlagOverrides: (params: {
    requestSecurityConfig: RequestSecurityConfig;
    token?: string;
    apikey?: string;
    username?: string;
    password?: string;
}) => RequestSecurityConfig;
export declare const getAvailableSecuritySchemes: (document: Document, operation: Operation) => {
    name: string;
    schemeDefinition: OpenAPIV3.SecuritySchemeObject;
}[];
